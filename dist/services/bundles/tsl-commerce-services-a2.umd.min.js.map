{"version":3,"sources":["ng://tsl-commerce-services-a2/lib/catalog/catalog-data-mock.ts","ng://tsl-commerce-services-a2/lib/catalog/catalog-data.service.ts","ng://tsl-commerce-services-a2/lib/user/user-data-mock.ts","ng://tsl-commerce-services-a2/lib/user/user-data.service.ts","ng://tsl-commerce-services-a2/lib/cart/cart.service.ts","ng://tsl-commerce-services-a2/lib/services.module.ts"],"names":["catalogData","id","name","price","description","CatalogDataService","prototype","getCatalogData","Injectable","userData","firstName","lastName","UserDataService","getUserData","cartLocalStorageKey","CartService","catalogDataService","this","cartItemIds","getCartItemsFromLocalStorage","getCartItems","_this","filter","catalogItem","console","log","includes","addCartItem","catalogItemId","push","setCartItemsToLocalStorage","removeCartItem","cartItemId","isCatalogItemInCart","some","item","JSON","parse","localStorage","getItem","items","setItem","stringify","ServicesModule","NgModule","args","imports","exports","providers"],"mappings":"8RAAO,IAAMA,EAAc,CACzB,CACEC,GAAI,EACJC,KAAM,aACNC,MAAO,MACPC,YAAa,2DAEf,CACEH,GAAI,EACJC,KAAM,aACNC,MAAO,MACPC,YAAa,8GAEf,CACEH,GAAI,EACJC,KAAM,cACNC,MAAO,MACPC,YAAa,gOCjBjBC,EAAA,WAME,SAAAA,YAEAA,EAAAC,UAAAC,eAAA,WACE,OAAOP,uBALVQ,EAAAA,qDAJD,GCAaC,EAAW,CACtBR,GAAI,EACJS,UAAW,OACXC,SAAU,OCHZC,EAAA,WAME,SAAAA,YAEAA,EAAAN,UAAAO,YAAA,WACE,OAAOJ,uBALVD,EAAAA,qDAJD,GCIMM,EAAsB,2BAI1B,SAAAC,EAAoBC,GAAAC,KAAAD,mBAAAA,EAClBC,KAAKC,YAAcD,KAAKE,gCAAkC,UAK5DJ,EAAAT,UAAAc,aAAA,WAAA,IAAAC,EAAAJ,KACE,OAAOA,KAAKD,mBAAmBT,iBAAiBe,OAAO,SAAAC,GAGrD,OAFAC,QAAQC,IAAIF,EAAYtB,IAEjBoB,EAAKH,YAAYQ,SAASH,EAAYtB,OAIjDc,EAAAT,UAAAqB,YAAA,SAAYC,GAGV,OAFAX,KAAKC,YAAYW,KAAKD,GACtBX,KAAKa,2BAA2Bb,KAAKC,aAC9BD,KAAKC,aAGdH,EAAAT,UAAAyB,eAAA,SAAeH,GACbX,KAAKC,YAAcD,KAAKC,YAAYI,OAAO,SAAAU,GACzC,OAAOA,IAAeJ,IAGxBX,KAAKa,2BAA2Bb,KAAKC,cAGvCH,EAAAT,UAAA2B,oBAAA,SAAoBL,GAClB,OAAOX,KAAKC,YAAYgB,KAAK,SAAAC,GAAQ,OAAAA,IAASP,KAGxCb,EAAAT,UAAAa,wCACN,OAAOiB,KAAKC,MAAMC,aAAaC,QAAQzB,KAGjCC,EAAAT,UAAAwB,oCAA2BU,GACjCF,aAAaG,QAAQ3B,EAAqBsB,KAAKM,UAAUF,yBAvC5DhC,EAAAA,sDALOH,UCDRsC,EAAA,oDAKCC,EAAAA,SAAQC,KAAA,CAAC,CACRC,QAAS,GACTC,QAAS,GACTC,UAAW,CACT3C,EACAO,EACAG,SAXJ","sourcesContent":["export const catalogData = [\n  {\n    id: 1,\n    name: 'Cool shoes',\n    price: 22.99,\n    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit'\n  },\n  {\n    id: 2,\n    name: 'Nice shoes',\n    price: 29.99,\n    description: 'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat'\n  },\n  {\n    id: 3,\n    name: 'Super shoes',\n    price: 59.99,\n    description: `Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n      Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum`\n  }\n];\n","import { Injectable } from '@angular/core';\nimport { catalogData } from './catalog-data-mock';\nimport {CatalogItem} from './CatalogItem';\n\n@Injectable()\nexport class CatalogDataService {\n  constructor() { }\n\n  getCatalogData(): CatalogItem[] {\n    return catalogData;\n  }\n}\n","export const userData = {\n  id: 1,\n  firstName: 'John',\n  lastName: 'Doe'\n};\n","import { Injectable } from '@angular/core';\nimport { User } from './User';\nimport { userData } from './user-data-mock';\n\n@Injectable()\nexport class UserDataService {\n  constructor() { }\n\n  getUserData(): User {\n    return userData;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {CatalogDataService} from '../catalog/catalog-data.service';\nimport {CatalogItem} from '../catalog/CatalogItem';\n\nconst cartLocalStorageKey = 'cartItemIds';\n\n@Injectable()\nexport class CartService {\n  constructor(private catalogDataService: CatalogDataService) {\n    this.cartItemIds = this.getCartItemsFromLocalStorage() || [];\n  }\n\n  cartItemIds;\n\n  getCartItems(): CatalogItem[] {\n    return this.catalogDataService.getCatalogData().filter(catalogItem => {\n      console.log(catalogItem.id);\n\n      return this.cartItemIds.includes(catalogItem.id);\n    });\n  }\n\n  addCartItem(catalogItemId) {\n    this.cartItemIds.push(catalogItemId);\n    this.setCartItemsToLocalStorage(this.cartItemIds);\n    return this.cartItemIds;\n  }\n\n  removeCartItem(catalogItemId) {\n    this.cartItemIds = this.cartItemIds.filter(cartItemId => {\n      return cartItemId !== catalogItemId;\n    });\n\n    this.setCartItemsToLocalStorage(this.cartItemIds);\n  }\n\n  isCatalogItemInCart(catalogItemId) {\n    return this.cartItemIds.some(item => item === catalogItemId);\n  }\n\n  private getCartItemsFromLocalStorage(): number[] {\n    return JSON.parse(localStorage.getItem(cartLocalStorageKey));\n  }\n\n  private setCartItemsToLocalStorage(items) {\n    localStorage.setItem(cartLocalStorageKey, JSON.stringify(items));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {CatalogDataService} from './catalog/catalog-data.service';\nimport {UserDataService} from './user/user-data.service';\nimport {CartService} from './cart/cart.service';\n\n@NgModule({\n  imports: [],\n  exports: [],\n  providers: [\n    CatalogDataService,\n    UserDataService,\n    CartService,\n  ]\n})\nexport class ServicesModule { }\n"]}